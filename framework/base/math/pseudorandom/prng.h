///////////////////////////////////////////////////////////////////////////////////////
// prng.h
//
// Pseudo random number generation functions.
// Generates values in range -1,1.
//
///////////////////////////////////////////////////////////////////////////////////////

#ifndef __PSEUDORANDOM_H__
#define __PSEUDORANDOM_H__

///////////////////////////////////////////////////////////////////////////////////////
unsigned int mprng();
///////////////////////////////////////////////////////////////////////////////////////
float mprng(int32t x);
///////////////////////////////////////////////////////////////////////////////////////
float mprng(int32t x, int32t y);
///////////////////////////////////////////////////////////////////////////////////////
float mprng(int32t x, int32t y, int32t z);
///////////////////////////////////////////////////////////////////////////////////////
float mprng(int32t x, int32t y, int32t z, int32t w);
///////////////////////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////////////////////
float mmixprng(int32t x);
///////////////////////////////////////////////////////////////////////////////////////
float mmixprng(int32t x, int32t y);
///////////////////////////////////////////////////////////////////////////////////////
float mmixprng2d(int32t x, int32t y, int32t z);
///////////////////////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////////////////////
float msmprng(float x);
///////////////////////////////////////////////////////////////////////////////////////
float msmprng(float x, float y);
///////////////////////////////////////////////////////////////////////////////////////
float msmprng(float x, float y, float z, bool smooth2d);
///////////////////////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////////////////////
float mfbm(float x, float y, int octaves, float amplitude, float frequence, float h);
///////////////////////////////////////////////////////////////////////////////////////
float mfbm(float x, float y, float z, int32t octaves, float amplitude, float frequence, 
		  float h, bool smooth2d);
///////////////////////////////////////////////////////////////////////////////////////
float mmultifractal(float x, float y, int32t octaves, float amplitude, float frequence,
                    float h, float offset);
///////////////////////////////////////////////////////////////////////////////////////
float mmultifractal(float x, float y, float z, int32t octaves, float amplitude,
                    float frequence, float h, float offset, bool smooth2d);
///////////////////////////////////////////////////////////////////////////////////////

#endif //__PSEUDORANDOM_H__
